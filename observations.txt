1. Certain scenarios are not covered by test cases, especially the depreciation/appreciations spanning
over difference stages at varying rates.

2. It's better to make Item immutable and the updateQuality method pure (without side-effect) to guard thread-safety
and to promote parallel processing.

3. It's better to override hashCode() and equals() methods of Item in case data structures as HashSet, HashMap
are used.

4. Instead of applying strategy-pattern, it's also feasible to let different items extend a customized
Item class or implement a common interface such that the subclasses define their own implementations of
updateQuality().
